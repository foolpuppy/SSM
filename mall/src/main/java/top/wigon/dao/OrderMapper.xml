<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.wigon.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="top.wigon.pojo.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="totalMoney" jdbcType="DECIMAL" property="totalmoney" />
    <result column="payDateTime" jdbcType="TIMESTAMP" property="paydatetime" />
    <result column="orderState" jdbcType="TINYINT" property="orderstate" />
    <result column="outTradeNo" jdbcType="VARCHAR" property="outtradeno" />
    <result column="expressCode" jdbcType="VARCHAR" property="expresscode" />
    <result column="expressName" jdbcType="VARCHAR" property="expressname" />
    <result column="consignDateTime" jdbcType="TIMESTAMP" property="consigndatetime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="userCriteria" separator="or">
        <if test="userCriteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="userCriteria.userCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="userCriteria" separator="or">
        <if test="userCriteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="userCriteria.userCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `uid`, totalMoney, payDateTime, orderState, outTradeNo, expressCode, expressName, 
    consignDateTime, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="top.wigon.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.wigon.pojo.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.wigon.pojo.Order" useGeneratedKeys="true">
    insert into order (`uid`, totalMoney, payDateTime, 
      orderState, outTradeNo, expressCode, 
      expressName, consignDateTime, gmt_create, 
      gmt_modified)
    values (#{uid,jdbcType=VARCHAR}, #{totalmoney,jdbcType=DECIMAL}, #{paydatetime,jdbcType=TIMESTAMP}, 
      #{orderstate,jdbcType=TINYINT}, #{outtradeno,jdbcType=VARCHAR}, #{expresscode,jdbcType=VARCHAR}, 
      #{expressname,jdbcType=VARCHAR}, #{consigndatetime,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.wigon.pojo.Order" useGeneratedKeys="true">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="totalmoney != null">
        totalMoney,
      </if>
      <if test="paydatetime != null">
        payDateTime,
      </if>
      <if test="orderstate != null">
        orderState,
      </if>
      <if test="outtradeno != null">
        outTradeNo,
      </if>
      <if test="expresscode != null">
        expressCode,
      </if>
      <if test="expressname != null">
        expressName,
      </if>
      <if test="consigndatetime != null">
        consignDateTime,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="totalmoney != null">
        #{totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="paydatetime != null">
        #{paydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstate != null">
        #{orderstate,jdbcType=TINYINT},
      </if>
      <if test="outtradeno != null">
        #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="expresscode != null">
        #{expresscode,jdbcType=VARCHAR},
      </if>
      <if test="expressname != null">
        #{expressname,jdbcType=VARCHAR},
      </if>
      <if test="consigndatetime != null">
        #{consigndatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.wigon.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.totalmoney != null">
        totalMoney = #{record.totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paydatetime != null">
        payDateTime = #{record.paydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderstate != null">
        orderState = #{record.orderstate,jdbcType=TINYINT},
      </if>
      <if test="record.outtradeno != null">
        outTradeNo = #{record.outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="record.expresscode != null">
        expressCode = #{record.expresscode,jdbcType=VARCHAR},
      </if>
      <if test="record.expressname != null">
        expressName = #{record.expressname,jdbcType=VARCHAR},
      </if>
      <if test="record.consigndatetime != null">
        consignDateTime = #{record.consigndatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=INTEGER},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      totalMoney = #{record.totalmoney,jdbcType=DECIMAL},
      payDateTime = #{record.paydatetime,jdbcType=TIMESTAMP},
      orderState = #{record.orderstate,jdbcType=TINYINT},
      outTradeNo = #{record.outtradeno,jdbcType=VARCHAR},
      expressCode = #{record.expresscode,jdbcType=VARCHAR},
      expressName = #{record.expressname,jdbcType=VARCHAR},
      consignDateTime = #{record.consigndatetime,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.wigon.pojo.Order">
    update order
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="totalmoney != null">
        totalMoney = #{totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="paydatetime != null">
        payDateTime = #{paydatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstate != null">
        orderState = #{orderstate,jdbcType=TINYINT},
      </if>
      <if test="outtradeno != null">
        outTradeNo = #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="expresscode != null">
        expressCode = #{expresscode,jdbcType=VARCHAR},
      </if>
      <if test="expressname != null">
        expressName = #{expressname,jdbcType=VARCHAR},
      </if>
      <if test="consigndatetime != null">
        consignDateTime = #{consigndatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.wigon.pojo.Order">
    update order
    set `uid` = #{uid,jdbcType=VARCHAR},
      totalMoney = #{totalmoney,jdbcType=DECIMAL},
      payDateTime = #{paydatetime,jdbcType=TIMESTAMP},
      orderState = #{orderstate,jdbcType=TINYINT},
      outTradeNo = #{outtradeno,jdbcType=VARCHAR},
      expressCode = #{expresscode,jdbcType=VARCHAR},
      expressName = #{expressname,jdbcType=VARCHAR},
      consignDateTime = #{consigndatetime,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>